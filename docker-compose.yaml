version: '3'

services:
    db:
        image: postgres:14
        volumes:
            - /private/var/lib/postgresql-tif:/var/lib/postgresql
        ports:
            - "5439:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: admin
            POSTGRES_DB: teinformatech
        networks:
            - app-network

    frontend-site:
        image: ${DOCKER_REGISTRY}-frontend:v1
        build:
            context: ./frontend/website
            dockerfile: Dockerfile
        container_name: frontend-site
        command: npm run dev -- -p 80
        networks: 
            - app-network
        ports:
            - "80:80"
        volumes: 
            - ./frontend/website:/usr/src/app
            - /usr/src/app/node_modules
        tty: true
        depends_on: 
            - backend

    backend:
      image: ${DOCKER_REGISTRY}-backend:v1
      command: sh -c "/wait && sh ./build_database_and_start.sh"
      ports:
        - '4000:4000'
      depends_on:
        - db
      build:
         # Here we define that it should build from the current directory.
         context: ./backend
         dockerfile: Dockerfile
      networks:
        - app-network
      volumes:
        - ./backend:/app
      environment:
         DATABASE_URL: ecto://postgres:changeme@postgres/development
         SECRET_KEY_BASE: "y+HzGpFdY4OXJq9Ro/QWYbwQnkKaQAy/Mk5/FKN0i5naNfkxSkKmDuQ6vIjOm65r"
         WAIT_HOSTS: db:5432
         WAIT_HOSTS_TIMEOUT: 300
         WAIT_SLEEP_INTERVAL: 30
         WAIT_HOST_CONNECT_TIMEOUT: 30
         # Variables to connect to our Postgres server.
         PGUSER: postgres
         PGPASSWORD: admin
         PGDATABASE: teinformatech
         PGPORT: 5432
         PGHOST: db

networks: 
  app-network:
    driver: bridge
